(define (factorial n)
  (if (= n 0)
      1
      (* n (factorial (- n 1)))))
(factorial 5)
(map factorial '(1 2 3 4 5))
(map (lambda (x) (factorial x)) '(0 1 2 3 4 5))

(define (fibonacci n)
  (if (< n 2)
      n
      (+ (fibonacci (- n 1)) (fibonacci (- n 2)))))
(fibonacci 6)
(map fibonacci '(0 1 2 3 4 5 6))
(map (lambda (x) (fibonacci x)) '(1 2 3 4 5 6 7))

(map (lambda (x) (list (factorial x) (fibonacci x))) '(0 1 2 3 4 5))
(map (lambda (x) (* (factorial x) (fibonacci x))) '(1 2 3 4 5))
(map (lambda (x) (+ (factorial x) (fibonacci x))) '(0 1 2 3 4 5))